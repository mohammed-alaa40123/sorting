def bubble_sort(lst):
    n = len(lst)
    frames = []
    sorted=False
    
    for i in range(n):
        if not sorted:
            sorted=True
            for j in range(i+1, n ):
                if lst[j] < lst[i]:
                    sorted=False
                    lst[j], lst[i] = lst[i], lst[j]
                    


void bubbleSort(std::vector<int>& arr) {
    int n = arr.size();
    bool sorted = false;

    for (int i = 0; i < n; ++i) {
        if (!sorted) {
            sorted = true;
            for (int j = i + 1; j < n; ++j) {
                if (arr[j] < arr[i]) {
                    sorted = false;
                    std::swap(arr[j], arr[i]);
                }
            }
        }
    }
}


public class BubbleSort {
    public static void bubbleSort(int[] arr) {
        int n = arr.length;
        boolean sorted = false;

        for (int i = 0; i < n; ++i) {
            if (!sorted) {
                sorted = true;
                for (int j = i + 1; j < n; ++j) {
                    if (arr[j] < arr[i]) {
                        sorted = false;
                        int temp = arr[j];
                        arr[j] = arr[i];
                        arr[i] = temp;
                    }
                }
            }
        }
    }
}